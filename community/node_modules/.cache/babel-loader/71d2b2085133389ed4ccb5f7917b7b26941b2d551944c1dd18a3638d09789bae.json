{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dbwns\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\myProject\\\\community\\\\src\\\\writePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Nav from './Nav';\nimport useFetchUser from './useFetchUser';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { SERVER_ADDRESS } from './serverAddress/serverAddress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WritePost() {\n  _s();\n  const {\n    user\n  } = useFetchUser();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const category_no = location.state;\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [path, setPath] = useState('');\n  const writePost = async () => {\n    const requestBody = {\n      title: title,\n      content: content,\n      writer: user.nickname\n    };\n    let requestPath;\n    if (no.no) {\n      requestBody.category_no = no.no;\n      requestPath = `${SERVER_ADDRESS}/board_category/insertBoard`;\n    } else {\n      requestPath = `${SERVER_ADDRESS}/postdb/insert`;\n    }\n    try {\n      if (title === '' && content === '') {\n        alert('내용을 모두 입력해 주세요.');\n        return false;\n      } else {\n        const response = await axios.post(requestPath, requestBody, {\n          withCredentials: true\n        });\n        console.log(response.data.success);\n        if (response.data.success === true) {\n          alert('게시글이 작성되었습니다!');\n          navigate('/');\n          return true;\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flex: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uC791\\uC131\\uC790\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), user ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          maxLength: 1000,\n          placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [content.length, \" / 1000\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: writePost,\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(WritePost, \"yRG5oyq+zr67fmOW0sJ6DcGyP8Q=\", false, function () {\n  return [useFetchUser, useNavigate, useLocation];\n});\n_c = WritePost;\nexport default WritePost;\nvar _c;\n$RefreshReg$(_c, \"WritePost\");","map":{"version":3,"names":["React","useState","Nav","useFetchUser","axios","useLocation","useNavigate","SERVER_ADDRESS","jsxDEV","_jsxDEV","WritePost","_s","user","navigate","location","category_no","state","title","setTitle","content","setContent","path","setPath","writePost","requestBody","writer","nickname","requestPath","no","alert","response","post","withCredentials","console","log","data","success","error","style","display","flex","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","maxLength","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dbwns/OneDrive/바탕 화면/myProject/community/src/writePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Nav from './Nav';\r\nimport useFetchUser from './useFetchUser';\r\nimport axios from 'axios';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { SERVER_ADDRESS } from './serverAddress/serverAddress';\r\n\r\nfunction WritePost() {\r\n    const { user } = useFetchUser();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const category_no = location.state;\r\n    const [title, setTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [path, setPath] = useState('');\r\n\r\n    const writePost = async () => {\r\n        const requestBody = {\r\n            title: title,\r\n            content: content,\r\n            writer: user.nickname,\r\n        };\r\n        let requestPath;\r\n        if (no.no) {\r\n            requestBody.category_no = no.no;\r\n            requestPath = `${SERVER_ADDRESS}/board_category/insertBoard`;\r\n        } else {\r\n            requestPath = `${SERVER_ADDRESS}/postdb/insert`;\r\n        }\r\n\r\n        try {\r\n            if (title === '' && content === '') {\r\n                alert('내용을 모두 입력해 주세요.');\r\n                return false;\r\n            } else {\r\n                const response = await axios.post(requestPath, requestBody, {\r\n                    withCredentials: true,\r\n                });\r\n                console.log(response.data.success);\r\n                if (response.data.success === true) {\r\n                    alert('게시글이 작성되었습니다!');\r\n                    navigate('/');\r\n                    return true;\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flex: 1 }}>\r\n            <header>\r\n                <Nav user={user} />\r\n            </header>\r\n\r\n            <div>\r\n                <div>\r\n                    <input\r\n                        placeholder=\"제목을 입력해 주세요.\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <p>작성자</p>\r\n                    {user ? <p>{user.nickname}</p> : null}\r\n                </div>\r\n                <div>\r\n                    <textarea\r\n                        maxLength={1000}\r\n                        placeholder=\"내용을 입력해 주세요.\"\r\n                        value={content}\r\n                        onChange={(e) => setContent(e.target.value)}\r\n                    />\r\n                    <p>{content.length} / 1000</p>\r\n                </div>\r\n                <button onClick={writePost}>작성하기</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WritePost;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}