{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dbwns\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\myProject\\\\community\\\\src\\\\viewBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Nav from './Nav';\nimport useFetchUser from './useFetchUser';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { SERVER_ADDRESS } from './serverAddress/serverAddress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewBoard() {\n  _s();\n  const {\n    user\n  } = useFetchUser();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const no = location.state.no;\n  const category_no = location.state.category_no;\n  const [view, setView] = useState([]);\n  const [isLiked, setIsLiked] = useState(false);\n  const [comments, setComments] = useState('');\n  const [commentsLog, setCommentsLog] = useState([]);\n  const formatEmail = data => {\n    const [localPart, domain] = data.split('@');\n    const maskedDomain = domain ? domain.replace(/./g, '*') : '';\n    return `${localPart}@${maskedDomain}`;\n  };\n  const viewData = async () => {\n    try {\n      const response = await axios.get(`${SERVER_ADDRESS}/postdb/view`, {\n        params: {\n          post_no: no,\n          category_no: category_no\n        }\n      });\n      const data = response.data;\n      setView(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const checkLiked = async () => {\n    if (user) {\n      try {\n        const response = await axios.post(`${SERVER_ADDRESS}/postdb/checkLiked`, {\n          post_no: no,\n          category_no: category_no\n        }, {\n          withCredentials: true\n        });\n        setIsLiked(response.data.liked);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const commentsData = async () => {\n    try {\n      const response = await axios.get(`${SERVER_ADDRESS}/comments/select/${no}/${category_no}`);\n      const data = response.data;\n      setCommentsLog(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    viewData();\n    checkLiked();\n    commentsData();\n  }, [no, category_no]);\n  const liked = async () => {\n    try {\n      if (!user) {\n        alert('로그인을 해주세요.');\n        navigate('/login', {\n          state: {\n            form: location.pathname,\n            no: no,\n            category_no: category_no\n          }\n        });\n        return;\n      } else {\n        const response = await axios.post(`${SERVER_ADDRESS}/postdb/liked`, {\n          post_no: no,\n          category_no: category_no\n        }, {\n          withCredentials: true\n        });\n        if (response.data.success) {\n          setView(prevView => ({\n            ...prevView,\n            liked: isLiked ? prevView.liked - 1 : prevView.liked + 1\n          }));\n          setIsLiked(prev => !prev);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const insertComments = async () => {\n    if (user) {\n      try {\n        const response = await axios.post(`${SERVER_ADDRESS}/comments/insert`, {\n          board_no: no,\n          category_no: category_no,\n          nickname: user.nickname,\n          comment: comments\n        }, {\n          withCredentials: true\n        });\n        console.log(response);\n        alert('댓글이 입력되었습니다!');\n        return setComments('');\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      alert('로그인을 해주세요.');\n      navigate('/login', {\n        state: {\n          form: location.pathname,\n          no: no,\n          category_no: category_no\n        }\n      });\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: view.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: view.writer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: view.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: view.regDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: view.hits\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: view.liked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: liked,\n          children: user && isLiked ? '좋아요 취소' : '좋아요'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentsView\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uB313\\uAE00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"comment-input\",\n            maxLength: 20,\n            placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n            value: comments,\n            onChange: e => setComments(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: insertComments,\n            children: \"\\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), commentsLog.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: commentsLog.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.nickname, \"(\", formatEmail(item.user_id), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(ViewBoard, \"W0XrMgtAYEhlUWvGYwFwSzTjCEg=\", false, function () {\n  return [useFetchUser, useNavigate, useLocation];\n});\n_c = ViewBoard;\nexport default ViewBoard;\nvar _c;\n$RefreshReg$(_c, \"ViewBoard\");","map":{"version":3,"names":["React","useEffect","useState","Nav","useFetchUser","axios","useLocation","useNavigate","SERVER_ADDRESS","jsxDEV","_jsxDEV","ViewBoard","_s","user","navigate","location","no","state","category_no","view","setView","isLiked","setIsLiked","comments","setComments","commentsLog","setCommentsLog","formatEmail","data","localPart","domain","split","maskedDomain","replace","viewData","response","get","params","post_no","error","console","checkLiked","post","withCredentials","liked","commentsData","alert","form","pathname","success","prevView","prev","insertComments","board_no","nickname","comment","log","children","fileName","_jsxFileName","lineNumber","columnNumber","title","writer","content","regDate","hits","onClick","className","maxLength","placeholder","value","onChange","e","target","length","map","item","index","user_id","_c","$RefreshReg$"],"sources":["C:/Users/dbwns/OneDrive/바탕 화면/myProject/community/src/viewBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Nav from './Nav';\r\nimport useFetchUser from './useFetchUser';\r\nimport axios from 'axios';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { SERVER_ADDRESS } from './serverAddress/serverAddress';\r\n\r\nfunction ViewBoard() {\r\n    const { user } = useFetchUser();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const no = location.state.no;\r\n    const category_no = location.state.category_no;\r\n    const [view, setView] = useState([]);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [comments, setComments] = useState('');\r\n    const [commentsLog, setCommentsLog] = useState([]);\r\n\r\n    const formatEmail = (data) => {\r\n        const [localPart, domain] = data.split('@');\r\n        const maskedDomain = domain ? domain.replace(/./g, '*') : '';\r\n        return `${localPart}@${maskedDomain}`;\r\n    };\r\n\r\n    const viewData = async () => {\r\n        try {\r\n            const response = await axios.get(`${SERVER_ADDRESS}/postdb/view`, {\r\n                params: {\r\n                    post_no: no,\r\n                    category_no: category_no,\r\n                },\r\n            });\r\n            const data = response.data;\r\n            setView(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const checkLiked = async () => {\r\n        if (user) {\r\n            try {\r\n                const response = await axios.post(\r\n                    `${SERVER_ADDRESS}/postdb/checkLiked`,\r\n                    { post_no: no, category_no: category_no },\r\n                    { withCredentials: true }\r\n                );\r\n                setIsLiked(response.data.liked);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const commentsData = async () => {\r\n        try {\r\n            const response = await axios.get(`${SERVER_ADDRESS}/comments/select/${no}/${category_no}`);\r\n            const data = response.data;\r\n            setCommentsLog(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        viewData();\r\n        checkLiked();\r\n        commentsData();\r\n    }, [no, category_no]);\r\n\r\n    const liked = async () => {\r\n        try {\r\n            if (!user) {\r\n                alert('로그인을 해주세요.');\r\n                navigate('/login', { state: { form: location.pathname, no: no, category_no: category_no } });\r\n                return;\r\n            } else {\r\n                const response = await axios.post(\r\n                    `${SERVER_ADDRESS}/postdb/liked`,\r\n                    { post_no: no, category_no: category_no },\r\n                    { withCredentials: true }\r\n                );\r\n                if (response.data.success) {\r\n                    setView((prevView) => ({\r\n                        ...prevView,\r\n                        liked: isLiked ? prevView.liked - 1 : prevView.liked + 1,\r\n                    }));\r\n                    setIsLiked((prev) => !prev);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const insertComments = async () => {\r\n        if (user) {\r\n            try {\r\n                const response = await axios.post(\r\n                    `${SERVER_ADDRESS}/comments/insert`,\r\n                    { board_no: no, category_no: category_no, nickname: user.nickname, comment: comments },\r\n                    { withCredentials: true }\r\n                );\r\n                console.log(response);\r\n                alert('댓글이 입력되었습니다!');\r\n                return setComments('');\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        } else {\r\n            alert('로그인을 해주세요.');\r\n            navigate('/login', { state: { form: location.pathname, no: no, category_no: category_no } });\r\n            return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Nav user={user} />\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <p>{view.title}</p>\r\n                </div>\r\n                <div>\r\n                    <p>{view.writer}</p>\r\n                </div>\r\n                <div>\r\n                    <p>{view.content}</p>\r\n                </div>\r\n                <div>\r\n                    <p>{view.regDate}</p>\r\n                </div>\r\n                <div>\r\n                    <p>{view.hits}</p>\r\n                </div>\r\n                <div>\r\n                    <p>{view.liked}</p>\r\n                    <button onClick={liked}>{user && isLiked ? '좋아요 취소' : '좋아요'}</button>\r\n                </div>\r\n\r\n                <div className=\"commentsView\">\r\n                    <div>\r\n                        <p>댓글</p>\r\n                        <textarea\r\n                            className=\"comment-input\"\r\n                            maxLength={20}\r\n                            placeholder=\"내용을 입력해 주세요.\"\r\n                            value={comments}\r\n                            onChange={(e) => setComments(e.target.value)}\r\n                        />\r\n                        <button onClick={insertComments}>등록</button>\r\n                    </div>\r\n                    {commentsLog.length > 0 ? (\r\n                        <div>\r\n                            {commentsLog.map((item, index) => (\r\n                                <div key={index}>\r\n                                    <p>\r\n                                        {item.nickname}({formatEmail(item.user_id)})\r\n                                    </p>\r\n                                    <p>{item.comment}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}