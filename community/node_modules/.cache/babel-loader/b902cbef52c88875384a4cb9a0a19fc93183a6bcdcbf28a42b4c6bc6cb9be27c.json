{"ast":null,"code":"import axios from'axios';import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Signup(){const navigate=useNavigate();const[formData,setFormData]=useState({id:'',password:'',name:'',phone:''});const[passwordConfirm,setPasswordConfirm]=useState('');const[message,setMessage]=useState({id:'',checkId:false,password:'',checkPassword:false,confirmPassword:'',checkConfirmPassword:false,name:'',phone:'',checkPhone:false});const handleSubmit=async e=>{e.preventDefault();try{const response=await axios.post('/userdb/signup',formData);if(response.status===201){navigate('/');}}catch(error){console.error(error);}};const emailVaild=async()=>{try{const response=await axios.post('/userdb/checkUser',formData.id);const data=response.data.message;const exist=response.data.exist;setMessage(prevMessage=>({...prevMessage,id:data,checkId:exist}));}catch(error){console.error;}};const phoneVaild=async()=>{try{const response=await axios.post('/userdb/checkUser',formData.phone);const data=response.data.message;const exist=response.data.exist;setMessage(prevMessage=>({...prevMessage,phone:data,checkPhone:exist}));}catch(error){console.error;}};const vaildPassword=input=>{const passwordRegex=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,20}$/;if(input===''||!passwordRegex.test(input)){setMessage(prevMessage=>({...prevMessage,password:'비밀번호는 영어와 숫자를 포함하여 8~20자로 입력해 주세요.'}));return false;}setMessage(prevMessage=>({...prevMessage,password:'사용 가능한 비밀번호입니다.',checkPassword:true}));return true;};const confirmVaildPassword=input=>{if(input===''){setMessage(prevMessage=>({...prevMessage,password:''}));return false;}else if(input===formData.password){setMessage(prevMessage=>({...prevMessage,confirmPassword:'비밀번호가 일치하지 않습니다.',checkConfirmPassword:false}));}setMessage(prevMessage=>({...prevMessage,password:'비밀번호가 일치합니다',checkConfirmPassword:true}));return true;};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"body\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:formData.name,onChange:e=>setFormData({...formData,name:e.target.value})}),/*#__PURE__*/_jsx(\"p\",{children:message.id})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"phone\",name:\"phone\",value:formData.phone,onChange:e=>{setFormData({...formData,phone:e.target.value});phoneVaild(e.target.value);},maxLength:11}),/*#__PURE__*/_jsx(\"p\",{children:message.phone})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC544\\uC774\\uB514 (\\uC774\\uBA54\\uC77C)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"id\",name:\"id\",value:formData.id,onChange:e=>{setFormData({...formData,id:e.target.value});}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:e=>{setFormData({...formData,password:e.target.value});vaildPassword(e.target.value);},maxLength:20,minLength:8}),/*#__PURE__*/_jsx(\"p\",{children:message.password})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:passwordConfirm,onChange:e=>{setPasswordConfirm(e.target.value),confirmVaildPassword(e.target.value);},maxLength:20,minLength:8}),/*#__PURE__*/_jsx(\"p\",{children:message.confirmPassword})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})})]})})});}export default Signup;","map":{"version":3,"names":["axios","React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Signup","navigate","formData","setFormData","id","password","name","phone","passwordConfirm","setPasswordConfirm","message","setMessage","checkId","checkPassword","confirmPassword","checkConfirmPassword","checkPhone","handleSubmit","e","preventDefault","response","post","status","error","console","emailVaild","data","exist","prevMessage","phoneVaild","vaildPassword","input","passwordRegex","test","confirmVaildPassword","children","onSubmit","type","value","onChange","target","maxLength","minLength"],"sources":["C:/Users/dbwns/OneDrive/바탕 화면/myProject/community/src/signup.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Signup() {\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState({\r\n        id: '',\r\n        password: '',\r\n        name: '',\r\n        phone: '',\r\n    });\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    const [message, setMessage] = useState({\r\n        id: '',\r\n        checkId: false,\r\n        password: '',\r\n        checkPassword: false,\r\n        confirmPassword: '',\r\n        checkConfirmPassword: false,\r\n        name: '',\r\n        phone: '',\r\n        checkPhone: false,\r\n    });\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/userdb/signup', formData);\r\n            if (response.status === 201) {\r\n                navigate('/');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const emailVaild = async () => {\r\n        try {\r\n            const response = await axios.post('/userdb/checkUser', formData.id);\r\n            const data = response.data.message;\r\n            const exist = response.data.exist;\r\n            setMessage((prevMessage) => ({\r\n                ...prevMessage,\r\n                id: data,\r\n                checkId: exist,\r\n            }));\r\n        } catch (error) {\r\n            console.error;\r\n        }\r\n    };\r\n\r\n    const phoneVaild = async () => {\r\n        try {\r\n            const response = await axios.post('/userdb/checkUser', formData.phone);\r\n            const data = response.data.message;\r\n            const exist = response.data.exist;\r\n            setMessage((prevMessage) => ({\r\n                ...prevMessage,\r\n                phone: data,\r\n                checkPhone: exist,\r\n            }));\r\n        } catch (error) {\r\n            console.error;\r\n        }\r\n    };\r\n\r\n    const vaildPassword = (input) => {\r\n        const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,20}$/;\r\n\r\n        if (input === '' || !passwordRegex.test(input)) {\r\n            setMessage((prevMessage) => ({\r\n                ...prevMessage,\r\n                password: '비밀번호는 영어와 숫자를 포함하여 8~20자로 입력해 주세요.',\r\n            }));\r\n            return false;\r\n        }\r\n        setMessage((prevMessage) => ({\r\n            ...prevMessage,\r\n            password: '사용 가능한 비밀번호입니다.',\r\n            checkPassword: true,\r\n        }));\r\n        return true;\r\n    };\r\n\r\n    const confirmVaildPassword = (input) => {\r\n        if (input === '') {\r\n            setMessage((prevMessage) => ({\r\n                ...prevMessage,\r\n                password: '',\r\n            }));\r\n            return false;\r\n        } else if (input === formData.password) {\r\n            setMessage((prevMessage) => ({\r\n                ...prevMessage,\r\n                confirmPassword: '비밀번호가 일치하지 않습니다.',\r\n                checkConfirmPassword: false,\r\n            }));\r\n        }\r\n        setMessage((prevMessage) => ({\r\n            ...prevMessage,\r\n            password: '비밀번호가 일치합니다',\r\n            checkConfirmPassword: true,\r\n        }));\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <body>\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <p>이름</p>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            name=\"name\"\r\n                            value={formData.name}\r\n                            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                        />\r\n                        <p>{message.id}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>휴대폰 번호</p>\r\n                        <input\r\n                            type=\"tel\"\r\n                            id=\"phone\"\r\n                            name=\"phone\"\r\n                            value={formData.phone}\r\n                            onChange={(e) => {\r\n                                setFormData({ ...formData, phone: e.target.value });\r\n                                phoneVaild(e.target.value);\r\n                            }}\r\n                            maxLength={11}\r\n                        />\r\n                        <p>{message.phone}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>아이디 (이메일)</p>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"id\"\r\n                            name=\"id\"\r\n                            value={formData.id}\r\n                            onChange={(e) => {\r\n                                setFormData({ ...formData, id: e.target.value });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <p>비밀번호</p>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            value={formData.password}\r\n                            onChange={(e) => {\r\n                                setFormData({ ...formData, password: e.target.value });\r\n                                vaildPassword(e.target.value);\r\n                            }}\r\n                            maxLength={20}\r\n                            minLength={8}\r\n                        />\r\n                        <p>{message.password}</p>\r\n                    </div>\r\n                    <div>\r\n                        <p>비밀번호 확인</p>\r\n                        <input\r\n                            type=\"password\"\r\n                            value={passwordConfirm}\r\n                            onChange={(e) => {\r\n                                setPasswordConfirm(e.target.value), confirmVaildPassword(e.target.value);\r\n                            }}\r\n                            maxLength={20}\r\n                            minLength={8}\r\n                        />\r\n                        <p>{message.confirmPassword}</p>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\">회원가입</button>\r\n                    </div>\r\n                </form>\r\n            </body>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,MAAMA,CAAA,CAAG,CACd,KAAM,CAAAC,QAAQ,CAAGN,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACO,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,CACrCU,EAAE,CAAE,EAAE,CACNC,QAAQ,CAAE,EAAE,CACZC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EACX,CAAC,CAAC,CACF,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,CACnCU,EAAE,CAAE,EAAE,CACNQ,OAAO,CAAE,KAAK,CACdP,QAAQ,CAAE,EAAE,CACZQ,aAAa,CAAE,KAAK,CACpBC,eAAe,CAAE,EAAE,CACnBC,oBAAoB,CAAE,KAAK,CAC3BT,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTS,UAAU,CAAE,KAChB,CAAC,CAAC,CAEF,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA5B,KAAK,CAAC6B,IAAI,CAAC,gBAAgB,CAAEnB,QAAQ,CAAC,CAC7D,GAAIkB,QAAQ,CAACE,MAAM,GAAK,GAAG,CAAE,CACzBrB,QAAQ,CAAC,GAAG,CAAC,CACjB,CACJ,CAAE,MAAOsB,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACxB,CACJ,CAAC,CAED,KAAM,CAAAE,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACA,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAA5B,KAAK,CAAC6B,IAAI,CAAC,mBAAmB,CAAEnB,QAAQ,CAACE,EAAE,CAAC,CACnE,KAAM,CAAAsB,IAAI,CAAGN,QAAQ,CAACM,IAAI,CAAChB,OAAO,CAClC,KAAM,CAAAiB,KAAK,CAAGP,QAAQ,CAACM,IAAI,CAACC,KAAK,CACjChB,UAAU,CAAEiB,WAAW,GAAM,CACzB,GAAGA,WAAW,CACdxB,EAAE,CAAEsB,IAAI,CACRd,OAAO,CAAEe,KACb,CAAC,CAAC,CAAC,CACP,CAAE,MAAOJ,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CACjB,CACJ,CAAC,CAED,KAAM,CAAAM,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAA5B,KAAK,CAAC6B,IAAI,CAAC,mBAAmB,CAAEnB,QAAQ,CAACK,KAAK,CAAC,CACtE,KAAM,CAAAmB,IAAI,CAAGN,QAAQ,CAACM,IAAI,CAAChB,OAAO,CAClC,KAAM,CAAAiB,KAAK,CAAGP,QAAQ,CAACM,IAAI,CAACC,KAAK,CACjChB,UAAU,CAAEiB,WAAW,GAAM,CACzB,GAAGA,WAAW,CACdrB,KAAK,CAAEmB,IAAI,CACXV,UAAU,CAAEW,KAChB,CAAC,CAAC,CAAC,CACP,CAAE,MAAOJ,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CACjB,CACJ,CAAC,CAED,KAAM,CAAAO,aAAa,CAAIC,KAAK,EAAK,CAC7B,KAAM,CAAAC,aAAa,CAAG,kDAAkD,CAExE,GAAID,KAAK,GAAK,EAAE,EAAI,CAACC,aAAa,CAACC,IAAI,CAACF,KAAK,CAAC,CAAE,CAC5CpB,UAAU,CAAEiB,WAAW,GAAM,CACzB,GAAGA,WAAW,CACdvB,QAAQ,CAAE,oCACd,CAAC,CAAC,CAAC,CACH,MAAO,MAAK,CAChB,CACAM,UAAU,CAAEiB,WAAW,GAAM,CACzB,GAAGA,WAAW,CACdvB,QAAQ,CAAE,iBAAiB,CAC3BQ,aAAa,CAAE,IACnB,CAAC,CAAC,CAAC,CACH,MAAO,KAAI,CACf,CAAC,CAED,KAAM,CAAAqB,oBAAoB,CAAIH,KAAK,EAAK,CACpC,GAAIA,KAAK,GAAK,EAAE,CAAE,CACdpB,UAAU,CAAEiB,WAAW,GAAM,CACzB,GAAGA,WAAW,CACdvB,QAAQ,CAAE,EACd,CAAC,CAAC,CAAC,CACH,MAAO,MAAK,CAChB,CAAC,IAAM,IAAI0B,KAAK,GAAK7B,QAAQ,CAACG,QAAQ,CAAE,CACpCM,UAAU,CAAEiB,WAAW,GAAM,CACzB,GAAGA,WAAW,CACdd,eAAe,CAAE,kBAAkB,CACnCC,oBAAoB,CAAE,KAC1B,CAAC,CAAC,CAAC,CACP,CACAJ,UAAU,CAAEiB,WAAW,GAAM,CACzB,GAAGA,WAAW,CACdvB,QAAQ,CAAE,aAAa,CACvBU,oBAAoB,CAAE,IAC1B,CAAC,CAAC,CAAC,CACH,MAAO,KAAI,CACf,CAAC,CAED,mBACIlB,IAAA,QAAAsC,QAAA,cACItC,IAAA,SAAAsC,QAAA,cACIpC,KAAA,SAAMqC,QAAQ,CAAEnB,YAAa,CAAAkB,QAAA,eACzBpC,KAAA,QAAAoC,QAAA,eACItC,IAAA,MAAAsC,QAAA,CAAG,cAAE,CAAG,CAAC,cACTtC,IAAA,UACIwC,IAAI,CAAC,MAAM,CACXjC,EAAE,CAAC,MAAM,CACTE,IAAI,CAAC,MAAM,CACXgC,KAAK,CAAEpC,QAAQ,CAACI,IAAK,CACrBiC,QAAQ,CAAGrB,CAAC,EAAKf,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEI,IAAI,CAAEY,CAAC,CAACsB,MAAM,CAACF,KAAM,CAAC,CAAE,CACvE,CAAC,cACFzC,IAAA,MAAAsC,QAAA,CAAIzB,OAAO,CAACN,EAAE,CAAI,CAAC,EAClB,CAAC,cACNL,KAAA,QAAAoC,QAAA,eACItC,IAAA,MAAAsC,QAAA,CAAG,iCAAM,CAAG,CAAC,cACbtC,IAAA,UACIwC,IAAI,CAAC,KAAK,CACVjC,EAAE,CAAC,OAAO,CACVE,IAAI,CAAC,OAAO,CACZgC,KAAK,CAAEpC,QAAQ,CAACK,KAAM,CACtBgC,QAAQ,CAAGrB,CAAC,EAAK,CACbf,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEK,KAAK,CAAEW,CAAC,CAACsB,MAAM,CAACF,KAAM,CAAC,CAAC,CACnDT,UAAU,CAACX,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAC,CAC9B,CAAE,CACFG,SAAS,CAAE,EAAG,CACjB,CAAC,cACF5C,IAAA,MAAAsC,QAAA,CAAIzB,OAAO,CAACH,KAAK,CAAI,CAAC,EACrB,CAAC,cACNR,KAAA,QAAAoC,QAAA,eACItC,IAAA,MAAAsC,QAAA,CAAG,yCAAS,CAAG,CAAC,cAChBtC,IAAA,UACIwC,IAAI,CAAC,OAAO,CACZjC,EAAE,CAAC,IAAI,CACPE,IAAI,CAAC,IAAI,CACTgC,KAAK,CAAEpC,QAAQ,CAACE,EAAG,CACnBmC,QAAQ,CAAGrB,CAAC,EAAK,CACbf,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEE,EAAE,CAAEc,CAAC,CAACsB,MAAM,CAACF,KAAM,CAAC,CAAC,CACpD,CAAE,CACL,CAAC,EACD,CAAC,cACNvC,KAAA,QAAAoC,QAAA,eACItC,IAAA,MAAAsC,QAAA,CAAG,0BAAI,CAAG,CAAC,cACXtC,IAAA,UACIwC,IAAI,CAAC,UAAU,CACfjC,EAAE,CAAC,UAAU,CACbE,IAAI,CAAC,UAAU,CACfgC,KAAK,CAAEpC,QAAQ,CAACG,QAAS,CACzBkC,QAAQ,CAAGrB,CAAC,EAAK,CACbf,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAEG,QAAQ,CAAEa,CAAC,CAACsB,MAAM,CAACF,KAAM,CAAC,CAAC,CACtDR,aAAa,CAACZ,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAC,CACjC,CAAE,CACFG,SAAS,CAAE,EAAG,CACdC,SAAS,CAAE,CAAE,CAChB,CAAC,cACF7C,IAAA,MAAAsC,QAAA,CAAIzB,OAAO,CAACL,QAAQ,CAAI,CAAC,EACxB,CAAC,cACNN,KAAA,QAAAoC,QAAA,eACItC,IAAA,MAAAsC,QAAA,CAAG,uCAAO,CAAG,CAAC,cACdtC,IAAA,UACIwC,IAAI,CAAC,UAAU,CACfC,KAAK,CAAE9B,eAAgB,CACvB+B,QAAQ,CAAGrB,CAAC,EAAK,CACbT,kBAAkB,CAACS,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAC,CAAEJ,oBAAoB,CAAChB,CAAC,CAACsB,MAAM,CAACF,KAAK,CAAC,CAC5E,CAAE,CACFG,SAAS,CAAE,EAAG,CACdC,SAAS,CAAE,CAAE,CAChB,CAAC,cACF7C,IAAA,MAAAsC,QAAA,CAAIzB,OAAO,CAACI,eAAe,CAAI,CAAC,EAC/B,CAAC,cACNjB,IAAA,QAAAsC,QAAA,cACItC,IAAA,WAAQwC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,0BAAI,CAAQ,CAAC,CAClC,CAAC,EACJ,CAAC,CACL,CAAC,CACN,CAAC,CAEd,CAEA,cAAe,CAAAnC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}