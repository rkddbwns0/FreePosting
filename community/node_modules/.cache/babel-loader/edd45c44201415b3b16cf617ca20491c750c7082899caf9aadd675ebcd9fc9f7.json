{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dbwns\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\myProject\\\\community\\\\src\\\\viewBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Nav from './Nav';\nimport useFetchUser from './useFetchUser';\nimport axios from 'axios';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { SERVER_ADDRESS } from './serverAddress/serverAddress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewBoard() {\n  _s();\n  const {\n    user\n  } = useFetchUser();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const no = location.state.no;\n  const category_no = location.state.category_no || '';\n  const [view, setView] = useState([]);\n  const [isLiked, setIsLiked] = useState(false);\n  const [path, setPath] = useState('');\n  const [reqData, setReqData] = useState([]);\n  console.log(no, category_no);\n  console.log(path);\n  useEffect(() => {\n    if (no && category_no) {\n      setPath(`${SERVER_ADDRESS}/board_category/view`);\n      setReqData(no, category_no);\n    } else if (no && category_no === '') {\n      setPath(`${SERVER_ADDRESS}/postdb/view`);\n      setReqData(no);\n    }\n    const viewData = async () => {\n      try {\n        const response = await axios.get(path, {\n          params: reqData\n        });\n        const data = response.data;\n        setView(data);\n        console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    viewData();\n  }, [no]);\n  useEffect(() => {\n    const checkLiked = async () => {\n      try {\n        const response = await axios.post(`${SERVER_ADDRESS}/postdb/checkLiked`, {\n          post_no: no\n        }, {\n          withCredentials: true\n        });\n        setIsLiked(response.data.liked);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    checkLiked();\n  }, [no]);\n  const liked = async () => {\n    try {\n      if (user) {\n        const response = await axios.post(`${SERVER_ADDRESS}/postdb/liked`, {\n          post_no: no\n        }, {\n          withCredentials: true\n        });\n        if (response.data.success) {\n          setView(prevView => ({\n            ...prevView,\n            liked: isLiked ? prevView.liked - 1 : prevView.liked + 1\n          }));\n          setIsLiked(prev => !prev);\n        }\n      } else {\n        alert('로그인을 해주세요.');\n        navigate('/login', {\n          state: {\n            form: '/freeboard'\n          }\n        });\n        return;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: view.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: view.writer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: view.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: view.regDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: view.hits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: view.liked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: liked,\n      children: user && isLiked ? '좋아요 취소' : '좋아요'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n_s(ViewBoard, \"G932sCOgWumKVDRWShM/ulXHJmU=\", false, function () {\n  return [useFetchUser, useNavigate, useLocation];\n});\n_c = ViewBoard;\nexport default ViewBoard;\nvar _c;\n$RefreshReg$(_c, \"ViewBoard\");","map":{"version":3,"names":["React","useEffect","useState","Nav","useFetchUser","axios","useLocation","useNavigate","SERVER_ADDRESS","jsxDEV","_jsxDEV","ViewBoard","_s","user","navigate","location","no","state","category_no","view","setView","isLiked","setIsLiked","path","setPath","reqData","setReqData","console","log","viewData","response","get","params","data","error","checkLiked","post","post_no","withCredentials","liked","success","prevView","prev","alert","form","children","fileName","_jsxFileName","lineNumber","columnNumber","title","writer","content","regDate","hits","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dbwns/OneDrive/바탕 화면/myProject/community/src/viewBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Nav from './Nav';\r\nimport useFetchUser from './useFetchUser';\r\nimport axios from 'axios';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { SERVER_ADDRESS } from './serverAddress/serverAddress';\r\n\r\nfunction ViewBoard() {\r\n    const { user } = useFetchUser();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const no = location.state.no;\r\n    const category_no = location.state.category_no || '';\r\n    const [view, setView] = useState([]);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [path, setPath] = useState('');\r\n    const [reqData, setReqData] = useState([]);\r\n\r\n    console.log(no, category_no);\r\n    console.log(path);\r\n    useEffect(() => {\r\n        if (no && category_no) {\r\n            setPath(`${SERVER_ADDRESS}/board_category/view`);\r\n            setReqData(no, category_no);\r\n        } else if (no && category_no === '') {\r\n            setPath(`${SERVER_ADDRESS}/postdb/view`);\r\n            setReqData(no);\r\n        }\r\n\r\n        const viewData = async () => {\r\n            try {\r\n                const response = await axios.get(path, { params: reqData });\r\n                const data = response.data;\r\n                setView(data);\r\n                console.log(data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        viewData();\r\n    }, [no]);\r\n\r\n    useEffect(() => {\r\n        const checkLiked = async () => {\r\n            try {\r\n                const response = await axios.post(\r\n                    `${SERVER_ADDRESS}/postdb/checkLiked`,\r\n                    { post_no: no },\r\n                    { withCredentials: true }\r\n                );\r\n                setIsLiked(response.data.liked);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n        checkLiked();\r\n    }, [no]);\r\n\r\n    const liked = async () => {\r\n        try {\r\n            if (user) {\r\n                const response = await axios.post(\r\n                    `${SERVER_ADDRESS}/postdb/liked`,\r\n                    { post_no: no },\r\n                    { withCredentials: true }\r\n                );\r\n                if (response.data.success) {\r\n                    setView((prevView) => ({\r\n                        ...prevView,\r\n                        liked: isLiked ? prevView.liked - 1 : prevView.liked + 1,\r\n                    }));\r\n                    setIsLiked((prev) => !prev);\r\n                }\r\n            } else {\r\n                alert('로그인을 해주세요.');\r\n                navigate('/login', { state: { form: '/freeboard' } });\r\n                return;\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Nav user={user} />\r\n            </div>\r\n            <div>\r\n                <p>{view.title}</p>\r\n            </div>\r\n            <div>\r\n                <p>{view.writer}</p>\r\n            </div>\r\n            <div>\r\n                <p>{view.content}</p>\r\n            </div>\r\n            <div>\r\n                <p>{view.regDate}</p>\r\n            </div>\r\n            <div>\r\n                <p>{view.hits}</p>\r\n            </div>\r\n\r\n            <p>{view.liked}</p>\r\n            <button onClick={liked}>{user && isLiked ? '좋아요 취소' : '좋아요'}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}