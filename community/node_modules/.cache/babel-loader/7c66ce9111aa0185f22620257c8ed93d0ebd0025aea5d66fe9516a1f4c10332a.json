{"ast":null,"code":"import axios from'axios';import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{SERVER_ADDRESS}from'./serverAddress/serverAddress';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Signup(){const navigate=useNavigate();const[name,setName]=useState('');const[phone,setPhone]=useState('');const[id,setId]=useState('');const[password,setPassword]=useState('');const[nickname,setNickname]=useState('');const[checkName,setCheckName]=useState(false);const[checkPhone,setCheckPhone]=useState(false);const[checkId,setCheckId]=useState(false);const[checkPassword,setCheckPassword]=useState(false);const[idMessage,setIdMessage]=useState('');const[nameMessage,setNameMessage]=useState('');const[phoneMessage,setPhoneMessage]=useState('');const[passwordMessage,setPasswordMessage]=useState('');const handleSubmit=async event=>{event.preventDefault();try{const response=await axios.post(`${SERVER_ADDRESS}/userdb/signup`,{name:name,phone:phone,id:id,password:password,nickname:nickname});if(response.status===201){navigate('/successSignup');}}catch(error){console.error(error);}};const validEmail=input=>{const emailPattern=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;if(input===''){setIdMessage('이메일을 입력해 주세요.');return false;}else if(!emailPattern.test(input)){setIdMessage('유효하지 않은 형식입니다.');return false;}return true;};const emailvalid=async()=>{if(!validEmail(id))return;try{const response=await axios.post(`${SERVER_ADDRESS}/userdb/checkUser`,{id:id});const data=response.data.message;setIdMessage(data);}catch(error){console.error(error);}};const validPhone=input=>{const phonePattern=/^(01[016789]{1})[0-9]{4}[0-9]{4}$/;if(input===''){setPhoneMessage('휴대폰 번호를 입력해 주세요.');return false;}else if(!phonePattern.test(input)){setPhoneMessage('유효하지 않은 형식입니다.');return false;}return true;};const phonevalid=async()=>{if(!validPhone(phone))return;try{const response=await axios.post('/userdb/checkUser',{phone:phone});const data=response.data.message;setPhoneMessage(data);}catch(error){console.error(error);}};const validPassword=input=>{const passwordRegex=/^(?=.*[a-z])(?=.*\\d)[A-Za-z\\d]{8,20}$/;if(input===''||!passwordRegex.test(input)){setPasswordMessage('비밀번호는 영어와 숫자를 포함하여 8~20자로 입력해 주세요.');}else{setPasswordMessage('사용 가능한 비밀번호입니다.');return true;}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:name,onChange:e=>setName(e.target.value)}),/*#__PURE__*/_jsx(\"p\",{children:nameMessage})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uD734\\uB300\\uD3F0 \\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"phone\",name:\"phone\",maxLength:11,value:phone,onChange:e=>{const newPhone=e.target.value;setPhone(newPhone);phonevalid(newPhone);}}),/*#__PURE__*/_jsx(\"p\",{children:phoneMessage})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uC544\\uC774\\uB514 (\\uC774\\uBA54\\uC77C)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"id\",name:\"id\",value:id,onChange:e=>{const newId=e.target.value;setId(newId);emailvalid(newId);}}),/*#__PURE__*/_jsx(\"p\",{children:idMessage})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:password,onChange:e=>{setPassword(e.target.value);validPassword(e.target.value);},maxLength:20,minLength:8}),/*#__PURE__*/_jsx(\"p\",{children:passwordMessage})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\uB2C9\\uB124\\uC784\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:nickname,onChange:e=>{setNickname(e.target.value);},maxLength:20,minLength:5})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})})]})});}export default Signup;","map":{"version":3,"names":["axios","React","useEffect","useState","useNavigate","SERVER_ADDRESS","jsx","_jsx","jsxs","_jsxs","Signup","navigate","name","setName","phone","setPhone","id","setId","password","setPassword","nickname","setNickname","checkName","setCheckName","checkPhone","setCheckPhone","checkId","setCheckId","checkPassword","setCheckPassword","idMessage","setIdMessage","nameMessage","setNameMessage","phoneMessage","setPhoneMessage","passwordMessage","setPasswordMessage","handleSubmit","event","preventDefault","response","post","status","error","console","validEmail","input","emailPattern","test","emailvalid","data","message","validPhone","phonePattern","phonevalid","validPassword","passwordRegex","children","onSubmit","type","value","onChange","e","target","maxLength","newPhone","newId","minLength"],"sources":["C:/Users/dbwns/OneDrive/바탕 화면/myProject/community/src/signup.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { SERVER_ADDRESS } from './serverAddress/serverAddress';\r\n\r\nfunction Signup() {\r\n    const navigate = useNavigate();\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [nickname, setNickname] = useState('');\r\n    const [checkName, setCheckName] = useState(false);\r\n    const [checkPhone, setCheckPhone] = useState(false);\r\n    const [checkId, setCheckId] = useState(false);\r\n    const [checkPassword, setCheckPassword] = useState(false);\r\n    const [idMessage, setIdMessage] = useState('');\r\n    const [nameMessage, setNameMessage] = useState('');\r\n    const [phoneMessage, setPhoneMessage] = useState('');\r\n    const [passwordMessage, setPasswordMessage] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const response = await axios.post(`${SERVER_ADDRESS}/userdb/signup`, {\r\n                name: name,\r\n                phone: phone,\r\n                id: id,\r\n                password: password,\r\n                nickname: nickname,\r\n            });\r\n            if (response.status === 201) {\r\n                navigate('/successSignup');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const validEmail = (input) => {\r\n        const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\n        if (input === '') {\r\n            setIdMessage('이메일을 입력해 주세요.');\r\n            return false;\r\n        } else if (!emailPattern.test(input)) {\r\n            setIdMessage('유효하지 않은 형식입니다.');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const emailvalid = async () => {\r\n        if (!validEmail(id)) return;\r\n\r\n        try {\r\n            const response = await axios.post(`${SERVER_ADDRESS}/userdb/checkUser`, { id: id });\r\n            const data = response.data.message;\r\n            setIdMessage(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const validPhone = (input) => {\r\n        const phonePattern = /^(01[016789]{1})[0-9]{4}[0-9]{4}$/;\r\n\r\n        if (input === '') {\r\n            setPhoneMessage('휴대폰 번호를 입력해 주세요.');\r\n            return false;\r\n        } else if (!phonePattern.test(input)) {\r\n            setPhoneMessage('유효하지 않은 형식입니다.');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const phonevalid = async () => {\r\n        if (!validPhone(phone)) return;\r\n\r\n        try {\r\n            const response = await axios.post('/userdb/checkUser', { phone: phone });\r\n            const data = response.data.message;\r\n            setPhoneMessage(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const validPassword = (input) => {\r\n        const passwordRegex = /^(?=.*[a-z])(?=.*\\d)[A-Za-z\\d]{8,20}$/;\r\n\r\n        if (input === '' || !passwordRegex.test(input)) {\r\n            setPasswordMessage('비밀번호는 영어와 숫자를 포함하여 8~20자로 입력해 주세요.');\r\n        } else {\r\n            setPasswordMessage('사용 가능한 비밀번호입니다.');\r\n            return true;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <p>이름</p>\r\n                    <input type=\"text\" id=\"name\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                    <p>{nameMessage}</p>\r\n                </div>\r\n                <div>\r\n                    <p>휴대폰 번호</p>\r\n                    <input\r\n                        type=\"tel\"\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        maxLength={11}\r\n                        value={phone}\r\n                        onChange={(e) => {\r\n                            const newPhone = e.target.value;\r\n                            setPhone(newPhone);\r\n                            phonevalid(newPhone);\r\n                        }}\r\n                    />\r\n                    <p>{phoneMessage}</p>\r\n                </div>\r\n                <div>\r\n                    <p>아이디 (이메일)</p>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"id\"\r\n                        name=\"id\"\r\n                        value={id}\r\n                        onChange={(e) => {\r\n                            const newId = e.target.value;\r\n                            setId(newId);\r\n                            emailvalid(newId);\r\n                        }}\r\n                    />\r\n                    <p>{idMessage}</p>\r\n                </div>\r\n                <div>\r\n                    <p>비밀번호</p>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => {\r\n                            setPassword(e.target.value);\r\n                            validPassword(e.target.value);\r\n                        }}\r\n                        maxLength={20}\r\n                        minLength={8}\r\n                    />\r\n                    <p>{passwordMessage}</p>\r\n                </div>\r\n                <div>\r\n                    <p>닉네임</p>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={nickname}\r\n                        onChange={(e) => {\r\n                            setNickname(e.target.value);\r\n                        }}\r\n                        maxLength={20}\r\n                        minLength={5}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\">회원가입</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}